:root {
  --red: rgba(255, 124, 124, 0.749);
  --yellow: rgba(255, 242, 146, 0.78);
  --grey: #e7e7e7ed;
  --black: #0000;
  --green: rgba(131, 255, 131, 0.91);
}

header {
  width: 100%;
  /*
  position fixed 시 
    뷰포트 기준으로 전환되어 
    width 100% 지정 
*/
  height: 60px;
  background-color: var(--red);
  position: fixed;
  /*position: sticky;
  top: 0;*/
}

section {
  position: relative;
  padding-top: 60px;
  /*
    position-fixed의 경우 
    다리는 부분이 생김 
    이에 따라 패딩을 통해 내부 여백을 조정 
    해결 방법 -> sticky
    */
  height: 50vh;
  background-color: var(--yellow);
  display: flex;
  justify-content: center;
  align-items: center;
}
section > div {
  position: absolute;
  width: 48px;
  height: 48px;
  display: flex;
  justify-content: center;
  align-items: center;
  color: #fff;
  background-color: deeppink;
}

section > div:first-of-type {
  top: 0;
  left: 0;
  /*
  position: absolute의 위치 지정방식은
  부모 요소 중 가장 가까운 position relative를 
  기준으로 한다.

  그러나, 부모 요소 중 position relative가 없다면, 
  사용자가 보고 있는 화면의 뷰포트 기준으로 절대 위치가 
  지정된다

  section을 기준으로 div의 절대 위치를 지정하고 싶다
  어떻게 할까요? 
  =section{
    position: relative;
  }
  */
}
section > div:nth-of-type(2) {
  bottom: 10%;
  right: 15%;
}
section > div:nth-last-of-type(3) {
  z-index: 1;
  /*
    default value: 0
    겹쳐있는 요소의 순서를 지정할 수 있음 
    보통은 100이나 1000 단위 등으로 크게 줌

    z-index 100(101,102)~200~300
    유지 보고를 위해!
    */
}

section > p {
  height: 300px;
  background-color: var(--green);
}

.side-bar {
  position: fixed;
  width: 80px;
  height: 30vh;
  background-color: var(--grey);
  top: 10;
  right: 5%;
}
/*
fixed의 경우 위치를 지정하면 사용자의 뷰포트 화면이 기준
*/

main {
  display: flex;
  height: 300vh;
}

main > aside {
  position: sticky;
  /*
    어느 부분에서 fixed으로 전환할 것인지 정할 수 있음
    남은 top이 0되었을 때 === 웹 사이트의 시작부분과 닿았을 때
    */

  /*top: 60px;*/

  top: 0;
  /*
  fixed된 header외 겹치는 부분이 생길 수 있음
  자바스크립트로 조율, 패딩으로 조율
  */
  width: 300px;
  height: 100vh;
  background-color: var(--red);
}

footer {
  height: 160px;
  background-color: var(--black);
}
